{"version":3,"file":"tpk-input.js","sources":["../../src/components/tpk-input.gts"],"sourcesContent":["import {\n  BaseUIComponent,\n  type BaseUIComponentArgs\n} from './base.ts';\nimport { assert } from '@ember/debug';\nimport type { MergeDeep } from 'type-fest';\nimport TpkInputInputComponent from './tpk-input/input.gts';\nimport type { WithBoundArgs } from '@glint/template';\nimport { hash } from '@ember/helper';\nimport TpkLabel from './tpk-label.gts';\n\nexport type TpkInputSignature = {\n  Args: MergeDeep<\n    BaseUIComponentArgs['Args'],\n    {\n      value?: string | number | boolean | null | undefined;\n      type?: HTMLInputElement['type'];\n      mask?: unknown;\n      min?: number;\n      step?: number;\n      max?: number;\n      placeholder?: string;\n      disabled?: boolean;\n      maskOptions?: Record<string, unknown>;\n      unmaskValue?: boolean;\n      onChange?: (value: string | number | Date | null, e: Event) => unknown;\n    }\n  >;\n  Blocks: {\n    default: [\n      {\n        Input: WithBoundArgs<\n          typeof TpkInputInputComponent,\n          | 'value'\n          | 'onChange'\n          | 'type'\n          | 'changeEvent'\n          | 'disabled'\n          | 'guid'\n\n          | 'min'\n          | 'step'\n          | 'max'\n        >;\n        Label: WithBoundArgs<\n          typeof TpkLabel,\n          'label' | 'guid'\n        >;\n        changeEvent: 'input' | 'change';\n        guid: string;\n      },\n    ];\n  };\n};\n\nexport default class TpkInputComponent extends BaseUIComponent<TpkInputSignature> {\n  constructor(owner: unknown, args: TpkInputSignature['Args']) {\n    super(owner, args);\n\n    assert(\n      '@label must be a string',\n      typeof args.label === 'string',\n    );\n\n    if (args.type === 'number') {\n      assert(\n        '@value must be a number',\n        typeof args.value === 'number' ||\n          args.value === undefined ||\n          args.value === null,\n      );\n    }\n  }\n\n  <template>\n    {{yield\n      (hash\n        Input=(component\n          TpkInputInputComponent\n          onChange=@onChange\n          type=@type\n          mask=@mask\n          maskOptions=@maskOptions\n          unmaskValue=@unmaskValue\n          placeholder=@placeholder\n          changeEvent=this.changeEvent\n          min=@min\n          step=@step\n          max=@max\n          value=@value\n          disabled=@disabled\n          guid=this.guid\n        )\n        Label=(component\n          TpkLabel\n          label=@label\n          guid=this.guid\n        )\n        changeEvent=this.changeEvent\n        guid=this.guid\n      )\n    }}\n  </template>\n}\n"],"names":["TpkInputComponent","BaseUIComponent","constructor","owner","args","assert","label","type","value","undefined","_TpkInputComponent","setComponentTemplate","precompileTemplate","strictMode","scope","hash","TpkInputInputComponent","TpkLabel"],"mappings":";;;;;;;;;AAuDe,MAAMA,0BAA0BC,eAAgB,CAAA;AAC7DC,EAAAA,WAAAA,CAAYC,KAAc,EAAEC,IAA+B,EAAE;AAC3D,IAAA,KAAK,CAACD,KAAO,EAAAC,IAAA,CAAA,CAAA;IAEbC,MAAA,CACE,yBACA,EAAA,OAAOD,IAAK,CAAAE,KAAK,KAAK,QAAA,CAAA,CAAA;AAGxB,IAAA,IAAIF,IAAA,CAAKG,IAAI,KAAK,QAAU,EAAA;MAC1BF,MAAA,CACE,yBACA,EAAA,OAAOD,IAAK,CAAAI,KAAK,KAAK,QAAA,IACpBJ,IAAK,CAAAI,KAAK,KAAKC,SAAA,IACfL,IAAK,CAAAI,KAAK,KAAK,IAAA,CAAA,CAAA;AAErB,KAAA;AACF,GAAA;AA+BF,CAAA;AAAAE,kBAAA,GAhDqBV;AAmBnBW,oBAAA,CAAAC,kBAAA,CA4BA,qYAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,IAAA;IAAAC,sBAAA;AAAAC,IAAAA,QAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAP,kBAAA,CAAA;;;;"}