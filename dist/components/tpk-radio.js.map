{"version":3,"file":"tpk-radio.js","sources":["../../src/components/tpk-radio.gts"],"sourcesContent":["import { assert } from '@ember/debug';\nimport { action } from '@ember/object';\nimport { BaseUIComponent, type BaseUIComponentArgs } from './base.ts';\nimport type { WithBoundArgs } from '@glint/template';\nimport TpkRadioInputComponent from './tpk-radio/input.gts';\nimport type { MergeDeep } from 'type-fest';\nimport { hash } from '@ember/helper';\nimport TpkLabel from './tpk-label.gts';\n\nexport type TpkRadioSignature = {\n  Args: MergeDeep<\n    BaseUIComponentArgs['Args'],\n    {\n      value?: string;\n      checked?: boolean;\n      disabled?: boolean;\n      name: string;\n      selected?: string;\n      onChange?: (value: string, e: Event) => unknown;\n    }\n  >;\n  Blocks: {\n    default: [\n      {\n        Label: WithBoundArgs<\n          typeof TpkLabel,\n          'guid' | 'label'\n        >;\n        Input: WithBoundArgs<\n          typeof TpkRadioInputComponent,\n          | 'guid'\n          | 'selected'\n          | 'disabled'\n          | 'name'\n          | 'value'\n          | 'changeEvent'\n          | 'onChange'\n\n        >;\n        onChange: TpkRadioComponent['onChange'];\n        changeEvent: 'input' | 'change';\n        guid: string;\n      },\n    ];\n  };\n};\n\nexport default class TpkRadioComponent extends BaseUIComponent<TpkRadioSignature> {\n  constructor(owner: unknown, args: TpkRadioSignature['Args']) {\n    super(owner, args);\n    assert('@name is required', args.name !== undefined);\n    assert('@value is required', args.value !== undefined);\n    assert('@label is required', args.label !== undefined);\n  }\n\n  @action\n  public onChange(e: Event) {   \n    e.preventDefault();\n    const target = e.target as HTMLInputElement;\n    this.args.onChange?.(target.value, e);\n  }\n\n  <template>\n    {{yield\n      (hash\n        Label=(component\n          TpkLabel\n          guid=this.guid\n          label=@label\n        )\n        Input=(component\n          TpkRadioInputComponent\n          guid=this.guid\n          selected=@selected\n          disabled=@disabled\n          name=@name\n          value=@value\n          changeEvent=this.changeEvent\n          onChange=this.onChange\n        )\n        onChange=this.onChange\n        changeEvent=this.changeEvent\n        guid=this.guid\n      )\n    }}\n  </template>\n}\n"],"names":["TpkRadioComponent","BaseUIComponent","constructor","owner","args","assert","name","undefined","value","label","onChange","e","preventDefault","target","setComponentTemplate","precompileTemplate","strictMode","scope","hash","TpkLabel","TpkRadioInputComponent","_TpkRadioComponent","_applyDecoratedDescriptor","_class","prototype","action","Object","getOwnPropertyDescriptor"],"mappings":";;;;;;;;;;;AA+CqBA,IAAAA,oDAAN,MAAMA,0BAA0BC,eAAgB,CAAA;AAC7DC,EAAAA,WAAAA,CAAYC,KAAc,EAAEC,IAA+B,EAAE;AAC3D,IAAA,KAAK,CAACD,KAAO,EAAAC,IAAA,CAAA,CAAA;IACbC,MAAO,CAAA,mBAAA,EAAqBD,IAAK,CAAAE,IAAI,KAAKC,SAAA,CAAA,CAAA;IAC1CF,MAAO,CAAA,oBAAA,EAAsBD,IAAK,CAAAI,KAAK,KAAKD,SAAA,CAAA,CAAA;IAC5CF,MAAO,CAAA,oBAAA,EAAsBD,IAAK,CAAAK,KAAK,KAAKF,SAAA,CAAA,CAAA;AAC9C,GAAA;EAGOG,QAAAA,CAASC,CAAQ,EAAE;IACxBA,CAAA,CAAEC,cAAc,EAAA,CAAA;AAChB,IAAA,MAAMC,MAAA,GAASF,CAAE,CAAAE,MAAU,CAAA;IAC3B,IAAI,CAACT,IAAI,CAACM,QAAQ,GAAGG,MAAA,CAAOL,KAAK,EAAEG,CAAA,CAAA,CAAA;AACrC,GAAA;AA0BF,CAAA,EAAAG,oBAAA,CAxBEC,kBAAA,CAuBA,gUAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,IAAA;IAAAC,QAAA;AAAAC,IAAAA,sBAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAC,kBAAA,CAAAA,EAAAA,kBAAA,CAAAC,EAAAA,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EA9BTC,UAAAA,EAAAA,CAAAA,MAAA,GAAAC,MAAA,CAAAC,wBAAA,CAAAJ,MAAA,CAAAC,SAAA,EAAA,UAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAD,MAAA;;;;"}