{"version":3,"file":"tpk-stack-list.js","sources":["../../src/components/tpk-stack-list.gts"],"sourcesContent":["import type { WithBoundArgs } from '@glint/template';\nimport TpkStackListTitleComponent from './tpk-stack-list/title.gts';\nimport TpkStackListContentComponent from './tpk-stack-list/content.gts';\nimport type { TOC } from '@ember/component/template-only';\nimport { hash } from '@ember/helper';\nimport TpkStackListItem from './tpk-stack-list/item.gts';\nimport TpkStackListHead from './tpk-stack-list/head.gts';\nimport { on } from '@ember/modifier';\n\nexport interface TpkStackListComponentSignature {\n  Args: {\n    onRemove: (item: unknown) => void;\n    data: unknown[];\n    key?: string;\n    onAdd: () => void;\n    titleForAdd: string;\n    readOnly: boolean;\n    customButtonClass?: string;\n  };\n  Element: HTMLUListElement;\n  Blocks: {\n    default: [\n      | {\n          Title: WithBoundArgs<\n            typeof TpkStackListTitleComponent,\n            'isExpanded' | 'item' | 'index'\n          >;\n        }\n      | {\n          Content: WithBoundArgs<\n            typeof TpkStackListContentComponent,\n            'isExpanded' | 'item' | 'index'\n          >;\n        },\n    ];\n  };\n}\n\nconst TpkStackListComponent: TOC<TpkStackListComponentSignature> = <template>\n  {{#each @data key=@key as |item index|}}\n    <TpkStackListItem @zIndex={{index}} @index={{index}} as |I|>\n      <div class='tpk-stack-head'>\n        {{yield\n          (hash\n            Title=(component\n              TpkStackListTitleComponent\n              isExpanded=I.isExpanded\n              item=item\n              index=index\n            )\n          )\n        }}\n        <TpkStackListHead\n          @isExpanded={{I.isExpanded}}\n          @toggleExpanded={{I.toggleExpanded}}\n          @item={{item}}\n          @index={{index}}\n          @onRemove={{@onRemove}}\n          @readOnly={{@readOnly}}\n        />\n      </div>\n      {{yield\n        (hash\n          Content=(component\n            TpkStackListContentComponent\n            isExpanded=I.isExpanded\n            item=item\n            index=index\n          )\n        )\n      }}\n    </TpkStackListItem>\n  {{/each}}\n  {{#unless @readOnly}}\n    <button\n      type='button'\n      class='link icon {{@customButtonClass}}'\n      data-test-add-stackList-item\n      {{on 'click' @onAdd}}\n    >\n      <img src='/assets/icons/plus.svg' alt='add' class='w-5 h-5' />\n      <span>\n        {{@titleForAdd}}\n      </span>\n    </button>\n  {{/unless}}\n</template>;\n\nexport default TpkStackListComponent;\n"],"names":["TpkStackListComponent","setComponentTemplate","precompileTemplate","strictMode","scope","TpkStackListItem","hash","TpkStackListTitleComponent","TpkStackListHead","TpkStackListContentComponent","on","templateOnly"],"mappings":";;;;;;;;;;AAsCA,MAAMA,qBAA6D,GAAAC,oBAAA,CAAAC,kBAAA,CAgDnE,g6BAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;sBAAAC,sBAAA;IAAAC,IAAA;IAAAC,0BAAA;sBAAAC,yBAAA;IAAAC,4BAAA;AAAAC,IAAAA,EAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAC,YAAA,EAAA;;;;"}