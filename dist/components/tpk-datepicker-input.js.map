{"version":3,"file":"tpk-datepicker-input.js","sources":["../../src/components/tpk-datepicker-input.gts"],"sourcesContent":["import Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { TempusDominus, Namespace, DateTime } from '@eonasdan/tempus-dominus';\nimport { action } from '@ember/object';\nimport { on } from '@ember/modifier';\nimport didInsert from '@ember/render-modifiers/modifiers/did-insert';\nimport IMask from 'imask';\n\nexport interface TpkDatepickerInputArgs {\n  mask?: string;\n  maskOptions?: Record<string, unknown>;\n  unmaskValue?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  value: Date | string | null;\n  stepping?: number;\n  mode?: 'multiple' | 'range';\n  multipleDatesSeparator?: string;\n  useCurrent?: boolean;\n  promptTimeOnDateChange?: boolean;\n  todayButton?: boolean;\n  clearButton?: boolean;\n  closeButton?: boolean;\n  enableTime?: boolean;\n  noCalendar?: boolean;\n  enableSecond?: boolean;\n  keepOpen?: boolean;\n  locale?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  daysOfWeekDisabled?: number[];\n  disabledTimeIntervals?: { from: Date; to: Date }[];\n  disabledDates?: Date[];\n  enabledDates?: Date[];\n  disabledHours?: number[];\n  enabledHours?: number[];\n  viewMode?: 'clock' | 'calendar' | 'months' | 'years' | 'decades';\n  onChange?: (value: Date[]) => void;\n  onClose?: () => void;\n}\n\nexport interface TpkDatepickerInputComponentSignature {\n  Args: TpkDatepickerInputArgs & { guid: string };\n  Element: HTMLInputElement;\n}\n\nexport interface HTMLInputTDElement extends HTMLInputElement {\n  _tempusDominus: TempusDominus;\n}\n\nexport default class TpkDatepickerNewInputComponent extends Component<TpkDatepickerInputComponentSignature> {\n  @tracked datepicker?: TempusDominus;\n\n  get value() {\n    return this.args.value === null ? undefined : this.args.value;\n  }\n\n  @action\n  setMask(element: HTMLElement) {\n    if (!this.args.mask) return;\n\n    IMask(element, {\n      mask: this.args.mask,\n      blocks: {\n        d: {\n          mask: IMask.MaskedRange,\n          from: 1,\n          to: 31,\n          maxLength: 2,\n        },\n        m: {\n          mask: IMask.MaskedRange,\n          from: 1,\n          to: 12,\n          maxLength: 2,\n        },\n        Y: {\n          mask: IMask.MaskedRange,\n          from: 1900,\n          to: 9999,\n        },\n        H: {\n          mask: IMask.MaskedRange,\n          from: 0,\n          to: 23,\n          maxLength: 2,\n        },\n        M: {\n          mask: IMask.MaskedRange,\n          from: 0,\n          to: 59,\n          maxLength: 2,\n        },\n        S: {\n          mask: IMask.MaskedRange,\n          from: 0,\n          to: 59,\n          maxLength: 2,\n        },\n      },\n      lazy: true,\n      overwrite: true,\n      autofix: true,\n    });\n  }\n\n  @action\n  setTempusDominus(element: HTMLInputElement) {\n    this.datepicker = new TempusDominus(element, {\n      container: element.parentElement as HTMLElement,\n      defaultDate: this.value as DateTime | undefined,\n      useCurrent: this.args.useCurrent === true ? true : false,\n      allowInputToggle: false,\n      dateRange: this.args.mode === 'range' ? true : false,\n      multipleDates: this.args.mode === 'multiple' ? true : false,\n      multipleDatesSeparator: this.args.multipleDatesSeparator,\n      promptTimeOnDateChange: this.args.promptTimeOnDateChange,\n      stepping: this.args.stepping ?? 5,\n      display: {\n        viewMode: this.args.viewMode,\n        keepOpen: this.args.keepOpen === true ? true : false,\n        icons: {\n          date: 'icon icon-calendar',\n          time: 'icon icon-time',\n          up: 'icon icon-up',\n          down: 'icon icon-down',\n          next: 'icon icon-next',\n          previous: 'icon icon-previous',\n          today: 'icon icon-today',\n          clear: 'icon icon-clear',\n          close: 'icon icon-close',\n        },\n        buttons: {\n          today: this.args.todayButton,\n          clear: this.args.clearButton === false ? false : true,\n          close: this.args.closeButton === false ? false : true,\n        },\n        components: {\n          calendar: this.args.noCalendar === true ? false : true,\n          date: this.args.noCalendar === true ? false : true,\n          month: this.args.noCalendar === true ? false : true,\n          year: this.args.noCalendar === true ? false : true,\n          decades: this.args.noCalendar === true ? false : true,\n          clock: this.args.enableTime,\n          hours: this.args.enableTime,\n          minutes: this.args.enableTime,\n          seconds: this.args.enableSecond,\n        },\n      },\n      localization: {\n        locale: this.args.locale ?? 'fr',\n        format: this.args.dateFormat ?? 'dd/MM/yyyy',\n      },\n      restrictions: {\n        minDate: this.args.minDate as DateTime | undefined,\n        maxDate: this.args.maxDate as DateTime | undefined,\n        daysOfWeekDisabled: this.args.daysOfWeekDisabled,\n        disabledTimeIntervals:\n          (this.args.disabledTimeIntervals as\n            | { from: DateTime; to: DateTime }[]\n            | undefined) ?? [],\n        disabledDates:\n          (this.args.disabledDates as DateTime[] | undefined) ?? [],\n        enabledDates: (this.args.enabledDates as DateTime[] | undefined) ?? [],\n        disabledHours: this.args.disabledHours ?? [],\n        enabledHours: this.args.enabledHours ?? [],\n      },\n    });\n\n    // Set the datepicker instance on the input element in order to use it in testing\n    // @ts-expect-error _tempusDominus is not a standard property\n    element._tempusDominus = this.datepicker;\n\n    if (this.args.onChange) {\n      this.datepicker.subscribe(Namespace.events.change, () => {\n        if (this.args.onChange) {\n          if (this.args.mode === 'multiple' || this.args.mode === 'range') {\n            // Workaround to trigger change event after at least 2 dates are picked\n            if (this.datepicker!.dates.picked.length > 1) {\n              return this.args.onChange(this.datepicker!.dates.picked);\n            }\n            return;\n          }\n          this.args.onChange(this.datepicker!.dates.picked);\n        }\n      });\n    }\n    if (this.args.onClose) {\n      this.datepicker.subscribe(Namespace.events.hide, () => {\n        this.args.onClose?.();\n      });\n    }\n  }\n\n  @action\n  closeDatepicker(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.datepicker?.hide();\n    }\n    if (event.key === 'Tab') {\n      this.datepicker?.hide();\n    }\n  }\n  <template>\n    <div class='tpk-datepicker-input-input-container'>\n      <input\n        {{didInsert this.setTempusDominus}}\n        {{didInsert this.setMask}}\n        disabled={{@disabled}}\n        class='tpk-datepicker-input-input'\n        placeholder={{@placeholder}}\n        id={{@guid}}\n        aria-autocomplete='none'\n        autocomplete='off'\n        autofill='off'\n        {{on 'keydown' this.closeDatepicker}}\n        data-test-tpk-datepicker-content\n        ...attributes\n      />\n    </div>\n  </template>\n}\n"],"names":["TpkDatepickerNewInputComponent","Component","constructor","args","_initializerDefineProperty","_descriptor","value","undefined","setMask","element","mask","IMask","blocks","d","MaskedRange","from","to","maxLength","m","Y","H","M","S","lazy","overwrite","autofix","setTempusDominus","datepicker","TempusDominus","container","parentElement","defaultDate","useCurrent","allowInputToggle","dateRange","mode","multipleDates","multipleDatesSeparator","promptTimeOnDateChange","stepping","display","viewMode","keepOpen","icons","date","time","up","down","next","previous","today","clear","close","buttons","todayButton","clearButton","closeButton","components","calendar","noCalendar","month","year","decades","clock","enableTime","hours","minutes","seconds","enableSecond","localization","locale","format","dateFormat","restrictions","minDate","maxDate","daysOfWeekDisabled","disabledTimeIntervals","disabledDates","enabledDates","disabledHours","enabledHours","_tempusDominus","onChange","subscribe","Namespace","events","change","dates","picked","length","onClose","hide","closeDatepicker","event","key","setComponentTemplate","precompileTemplate","strictMode","scope","didInsert","on","_TpkDatepickerNewInputComponent","_applyDecoratedDescriptor","_class","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor"],"mappings":";;;;;;;;;;;;AAmDqBA,IAAAA,8EAAN,MAAMA,uCAAuCC,SAAU,CAAA;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,0BAAA,qBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;EAGpE,IAAIC,KAAQA,GAAA;AACV,IAAA,OAAO,IAAI,CAACH,IAAI,CAACG,KAAK,KAAK,IAAO,GAAAC,SAAA,GAAY,IAAI,CAACJ,IAAI,CAACG,KAAK,CAAA;AAC/D,GAAA;EAGAE,OAAQA,CAAAC,OAAoB,EAAE;AAC5B,IAAA,IAAI,CAAC,IAAI,CAACN,IAAI,CAACO,IAAI,EAAE,OAAA;IAErBC,KAAA,CAAMF,OAAS,EAAA;AACbC,MAAAA,IAAA,EAAM,IAAI,CAACP,IAAI,CAACO,IAAI;AACpBE,MAAAA,MAAQ,EAAA;AACNC,QAAAA,CAAG,EAAA;UACDH,IAAA,EAAMC,MAAMG,WAAW;AACvBC,UAAAA,IAAM,EAAA,CAAA;AACNC,UAAAA,EAAI,EAAA,EAAA;AACJC,UAAAA,SAAW,EAAA,CAAA;SACb;AACAC,QAAAA,CAAG,EAAA;UACDR,IAAA,EAAMC,MAAMG,WAAW;AACvBC,UAAAA,IAAM,EAAA,CAAA;AACNC,UAAAA,EAAI,EAAA,EAAA;AACJC,UAAAA,SAAW,EAAA,CAAA;SACb;AACAE,QAAAA,CAAG,EAAA;UACDT,IAAA,EAAMC,MAAMG,WAAW;AACvBC,UAAAA,IAAM,EAAA,IAAA;AACNC,UAAAA,EAAI,EAAA,IAAA;SACN;AACAI,QAAAA,CAAG,EAAA;UACDV,IAAA,EAAMC,MAAMG,WAAW;AACvBC,UAAAA,IAAM,EAAA,CAAA;AACNC,UAAAA,EAAI,EAAA,EAAA;AACJC,UAAAA,SAAW,EAAA,CAAA;SACb;AACAI,QAAAA,CAAG,EAAA;UACDX,IAAA,EAAMC,MAAMG,WAAW;AACvBC,UAAAA,IAAM,EAAA,CAAA;AACNC,UAAAA,EAAI,EAAA,EAAA;AACJC,UAAAA,SAAW,EAAA,CAAA;SACb;AACAK,QAAAA,CAAG,EAAA;UACDZ,IAAA,EAAMC,MAAMG,WAAW;AACvBC,UAAAA,IAAM,EAAA,CAAA;AACNC,UAAAA,EAAI,EAAA,EAAA;AACJC,UAAAA,SAAW,EAAA,CAAA;AACb,SAAA;OACF;AACAM,MAAAA,IAAM,EAAA,IAAA;AACNC,MAAAA,SAAW,EAAA,IAAA;AACXC,MAAAA,OAAS,EAAA,IAAA;AACX,KAAA,CAAA,CAAA;AACF,GAAA;EAGAC,gBAAiBA,CAAAjB,OAAyB,EAAE;AAC1C,IAAA,IAAI,CAACkB,UAAU,GAAG,IAAIC,cAAcnB,OAAS,EAAA;MAC3CoB,SAAW,EAAApB,OAAA,CAAQqB,aAAiB;MACpCC,WAAA,EAAa,IAAI,CAACzB,KAA6B;MAC/C0B,UAAA,EAAY,IAAI,CAAC7B,IAAI,CAAC6B,UAAU,KAAK,OAAO,IAAO,GAAA,KAAA;AACnDC,MAAAA,gBAAkB,EAAA,KAAA;MAClBC,SAAA,EAAW,IAAI,CAAC/B,IAAI,CAACgC,IAAI,KAAK,UAAU,IAAO,GAAA,KAAA;MAC/CC,aAAA,EAAe,IAAI,CAACjC,IAAI,CAACgC,IAAI,KAAK,aAAa,IAAO,GAAA,KAAA;AACtDE,MAAAA,sBAAA,EAAwB,IAAI,CAAClC,IAAI,CAACkC,sBAAsB;AACxDC,MAAAA,sBAAA,EAAwB,IAAI,CAACnC,IAAI,CAACmC,sBAAsB;AACxDC,MAAAA,QAAA,EAAU,IAAI,CAACpC,IAAI,CAACoC,QAAQ,IAAI,CAAA;AAChCC,MAAAA,OAAS,EAAA;AACPC,QAAAA,QAAA,EAAU,IAAI,CAACtC,IAAI,CAACsC,QAAQ;QAC5BC,QAAA,EAAU,IAAI,CAACvC,IAAI,CAACuC,QAAQ,KAAK,OAAO,IAAO,GAAA,KAAA;AAC/CC,QAAAA,KAAO,EAAA;AACLC,UAAAA,IAAM,EAAA,oBAAA;AACNC,UAAAA,IAAM,EAAA,gBAAA;AACNC,UAAAA,EAAI,EAAA,cAAA;AACJC,UAAAA,IAAM,EAAA,gBAAA;AACNC,UAAAA,IAAM,EAAA,gBAAA;AACNC,UAAAA,QAAU,EAAA,oBAAA;AACVC,UAAAA,KAAO,EAAA,iBAAA;AACPC,UAAAA,KAAO,EAAA,iBAAA;AACPC,UAAAA,KAAO,EAAA,iBAAA;SACT;AACAC,QAAAA,OAAS,EAAA;AACPH,UAAAA,KAAA,EAAO,IAAI,CAAC/C,IAAI,CAACmD,WAAW;UAC5BH,KAAA,EAAO,IAAI,CAAChD,IAAI,CAACoD,WAAW,KAAK,QAAQ,KAAQ,GAAA,IAAA;UACjDH,KAAA,EAAO,IAAI,CAACjD,IAAI,CAACqD,WAAW,KAAK,QAAQ,KAAQ,GAAA,IAAA;SACnD;AACAC,QAAAA,UAAY,EAAA;UACVC,QAAA,EAAU,IAAI,CAACvD,IAAI,CAACwD,UAAU,KAAK,OAAO,KAAQ,GAAA,IAAA;UAClDf,IAAA,EAAM,IAAI,CAACzC,IAAI,CAACwD,UAAU,KAAK,OAAO,KAAQ,GAAA,IAAA;UAC9CC,KAAA,EAAO,IAAI,CAACzD,IAAI,CAACwD,UAAU,KAAK,OAAO,KAAQ,GAAA,IAAA;UAC/CE,IAAA,EAAM,IAAI,CAAC1D,IAAI,CAACwD,UAAU,KAAK,OAAO,KAAQ,GAAA,IAAA;UAC9CG,OAAA,EAAS,IAAI,CAAC3D,IAAI,CAACwD,UAAU,KAAK,OAAO,KAAQ,GAAA,IAAA;AACjDI,UAAAA,KAAA,EAAO,IAAI,CAAC5D,IAAI,CAAC6D,UAAU;AAC3BC,UAAAA,KAAA,EAAO,IAAI,CAAC9D,IAAI,CAAC6D,UAAU;AAC3BE,UAAAA,OAAA,EAAS,IAAI,CAAC/D,IAAI,CAAC6D,UAAU;AAC7BG,UAAAA,OAAA,EAAS,IAAI,CAAChE,IAAI,CAACiE,YAAAA;AACrB,SAAA;OACF;AACAC,MAAAA,YAAc,EAAA;AACZC,QAAAA,MAAA,EAAQ,IAAI,CAACnE,IAAI,CAACmE,MAAM,IAAI,IAAA;AAC5BC,QAAAA,MAAA,EAAQ,IAAI,CAACpE,IAAI,CAACqE,UAAU,IAAI,YAAA;OAClC;AACAC,MAAAA,YAAc,EAAA;AACZC,QAAAA,OAAA,EAAS,IAAI,CAACvE,IAAI,CAACuE,OAA+B;AAClDC,QAAAA,OAAA,EAAS,IAAI,CAACxE,IAAI,CAACwE,OAA+B;AAClDC,QAAAA,kBAAA,EAAoB,IAAI,CAACzE,IAAI,CAACyE,kBAAkB;AAChDC,QAAAA,qBAAA,EACG,IAAI,CAAC1E,IAAI,CAAC0E,qBAAqB,IAEd,EAAE;AACtBC,QAAAA,aACE,EAAC,IAAI,CAAC3E,IAAI,CAAC2E,aAAa,IAA+B,EAAE;AAC3DC,QAAAA,YAAc,EAAC,IAAI,CAAC5E,IAAI,CAAC4E,YAAY,IAA+B,EAAE;AACtEC,QAAAA,aAAA,EAAe,IAAI,CAAC7E,IAAI,CAAC6E,aAAa,IAAI,EAAE;AAC5CC,QAAAA,YAAA,EAAc,IAAI,CAAC9E,IAAI,CAAC8E,YAAY,IAAI,EAAA;AAC1C,OAAA;AACF,KAAA,CAAA,CAAA;AAEA;AACA;AACAxE,IAAAA,OAAA,CAAQyE,cAAc,GAAG,IAAI,CAACvD,UAAU,CAAA;AAExC,IAAA,IAAI,IAAI,CAACxB,IAAI,CAACgF,QAAQ,EAAE;MACtB,IAAI,CAACxD,UAAU,CAACyD,SAAS,CAACC,SAAU,CAAAC,MAAM,CAACC,MAAM,EAAE,MAAA;AACjD,QAAA,IAAI,IAAI,CAACpF,IAAI,CAACgF,QAAQ,EAAE;AACtB,UAAA,IAAI,IAAI,CAAChF,IAAI,CAACgC,IAAI,KAAK,UAAc,IAAA,IAAI,CAAChC,IAAI,CAACgC,IAAI,KAAK,OAAS,EAAA;AAC/D;YACA,IAAI,IAAI,CAACR,UAAU,CAAE6D,KAAK,CAACC,MAAM,CAACC,MAAM,GAAG,CAAG,EAAA;AAC5C,cAAA,OAAO,IAAI,CAACvF,IAAI,CAACgF,QAAQ,CAAC,IAAI,CAACxD,UAAU,CAAE6D,KAAK,CAACC,MAAM,CAAA,CAAA;AACzD,aAAA;AACA,YAAA,OAAA;AACF,WAAA;AACA,UAAA,IAAI,CAACtF,IAAI,CAACgF,QAAQ,CAAC,IAAI,CAACxD,UAAU,CAAE6D,KAAK,CAACC,MAAM,CAAA,CAAA;AAClD,SAAA;AACF,OAAA,CAAA,CAAA;AACF,KAAA;AACA,IAAA,IAAI,IAAI,CAACtF,IAAI,CAACwF,OAAO,EAAE;MACrB,IAAI,CAAChE,UAAU,CAACyD,SAAS,CAACC,SAAU,CAAAC,MAAM,CAACM,IAAI,EAAE,MAAA;AAC/C,QAAA,IAAI,CAACzF,IAAI,CAACwF,OAAO,IAAA,CAAA;AACnB,OAAA,CAAA,CAAA;AACF,KAAA;AACF,GAAA;EAGAE,eAAgBA,CAAAC,KAAoB,EAAE;AACpC,IAAA,IAAIA,KAAA,CAAMC,GAAG,KAAK,QAAU,EAAA;AAC1B,MAAA,IAAI,CAACpE,UAAU,EAAEiE,IAAA,EAAA,CAAA;AACnB,KAAA;AACA,IAAA,IAAIE,KAAA,CAAMC,GAAG,KAAK,KAAO,EAAA;AACvB,MAAA,IAAI,CAACpE,UAAU,EAAEiE,IAAA,EAAA,CAAA;AACnB,KAAA;AACF,GAAA;AAmBF,CAAA,EAAAI,oBAAA,CAlBEC,kBAAA,CAiBA,0ZAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,SAAA;AAAAC,IAAAA,EAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAC,+BAAA,CAAA,EAAAA,+BAAA,CAAAjG,EAAAA,WAAA,GAAAkG,yBAAA,CAAAC,MAAA,CAAAC,SAAA,iBAzKTC,OAAA,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAA,CAAA,EAAAP,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EAAA,SAAA,EAAA,CAMAM,MAAA,CAAA,EAAAC,MAAA,CAAAC,wBAAA,CAAAT,MAAA,CAAAC,SAAA,EAAA,SAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAF,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EAAA,kBAAA,EAAA,CAiDAM,MAAA,CAAA,EAAAC,MAAA,CAAAC,wBAAA,CAAAT,MAAA,CAAAC,SAAA,EAAA,kBAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAF,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EAAA,iBAAA,EAAA,CAwFAM,MAAA,CAAA,EAAAC,MAAA,CAAAC,wBAAA,CAAAT,MAAA,CAAAC,SAAA,EAAA,iBAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAD,MAAA;;;;"}