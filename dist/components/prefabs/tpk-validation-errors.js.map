{"version":3,"file":"tpk-validation-errors.js","sources":["../../../src/components/prefabs/tpk-validation-errors.gts"],"sourcesContent":["import { helper } from '@ember/component/helper';\nimport Component from '@glimmer/component';\nimport { htmlSafe as HS } from '@ember/template';\nimport { t, type IntlService } from 'ember-intl';\nimport { service } from '@ember/service';\n\nexport interface TpkValidationErrorsComponentSignature {\n  Args: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    errors: any;\n\n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class TpkValidationErrorsComponent extends Component<TpkValidationErrorsComponentSignature> {\n  @service declare intl: IntlService;\n\n  htmlSafe = helper(function htmlSafe(params: [string]) {\n    return HS(params.join());\n  });\n\n  get errorMessages() {\n    return this.args.errors.map((error: { message: string; params: string[] }) => {\n      if (error.message) {\n        const translationExists = this.intl.exists(error.message);\n        return HS(translationExists ? this.intl.t(error.message) : error.message);\n      }\n      return error;\n    });\n  }\n\n  <template>\n    <div class=\"tpk-validation-errors\"\n    data-test-tpk-validation-errors\n    ...attributes>\n      {{#each this.errorMessages as |error|}}\n        <span>\n          {{#if error.message}}\n            {{this.htmlSafe (t error.message error.params)}}\n          {{else}}\n            {{error}}\n          {{/if}}\n        </span>\n      {{/each}}\n    </div>\n  </template>\n}\n"],"names":["TpkValidationErrorsComponent","Component","constructor","args","_initializerDefineProperty","_descriptor","_defineProperty","helper","htmlSafe","params","HS","join","errorMessages","errors","map","error","message","translationExists","intl","exists","t","setComponentTemplate","precompileTemplate","strictMode","scope","_TpkValidationErrorsComponent","_applyDecoratedDescriptor","_class","prototype","service","configurable","enumerable","writable","initializer"],"mappings":";;;;;;;;;;AAkBqBA,IAAAA,0EAAN,MAAMA,qCAAqCC,SAAU,CAAA;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,0BAAA,eAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,mBAGvDC,MAAO,CAAA,SAASC,UAASA,CAAAC,MAAgB,EAAA;AAClD,MAAA,OAAOC,QAAA,CAAGD,OAAOE,IAAI,EAAA,CAAA,CAAA;AACvB,KAAG,CAAA,CAAA,CAAA;AAAA,GAAA;EAEH,IAAIC,aAAgBA,GAAA;IAClB,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAACC,GAAG,CAAEC;MAC3B,IAAIA,KAAA,CAAMC,OAAO,EAAE;QACjB,MAAMC,iBAAA,GAAoB,IAAI,CAACC,IAAI,CAACC,MAAM,CAACJ,MAAMC,OAAO,CAAA,CAAA;AACxD,QAAA,OAAON,QAAG,CAAAO,iBAAA,GAAoB,IAAI,CAACC,IAAI,CAACE,CAAC,CAACL,KAAM,CAAAC,OAAO,CAAI,GAAAD,KAAA,CAAMC,OAAO,CAAA,CAAA;AAC1E,OAAA;AACA,MAAA,OAAOD,KAAA,CAAA;AACT,KAAA,CAAA,CAAA;AACF,GAAA;AAiBF,CAAA,EAAAM,oBAAA,CAfEC,kBAAA,CAcA,yWAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;AAAAJ,IAAAA,CAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAK,6BAAA,CAAA,EAAAA,6BAAA,CAAApB,EAAAA,WAAA,GAAAqB,yBAAA,CAAAC,MAAA,CAAAC,SAAA,WA9BTC,OAAA,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAA,CAAA,EAAAN,MAAA;;;;"}