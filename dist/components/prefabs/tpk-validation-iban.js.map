{"version":3,"file":"tpk-validation-iban.js","sources":["../../../src/components/prefabs/tpk-validation-iban.gts"],"sourcesContent":["import TpkValidationInputComponent, { type TpkValidationInputComponentSignature } from \"../tpk-validation-input.gts\";\nimport { type BaseValidationSignature } from \"../base.ts\";\nimport { maskSpecialCharDefinition, getMaskForPrefixOrDefault } from \"../../utils/mask-utils.ts\";\nimport TpkValidationErrorsComponent from './tpk-validation-errors.gts';\nimport MandatoryLabelComponent from \"./mandatory-label.gts\";\nimport Component from \"@glimmer/component\";\nimport { action } from \"@ember/object\";\n\nexport interface TpkValidationIBANPrefabSignature\n  extends BaseValidationSignature {\n  Args: Omit<TpkValidationInputComponentSignature['Args'], 'type' | 'min' | 'max' | 'step' | 'mask' | 'maskOptions' | 'unmaskValue' | 'mask'> & {\n    mandatory?: boolean;\n    onChange?: (value: string, e: Event) => void;\n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLElement;\n}\n\nexport default class TpkValidationIBANPrefabComponent extends Component<TpkValidationIBANPrefabSignature> {\n  ibanMaskByCountry = [{\n    mask: '$$&& &&&& &&&& &&&&',\n    startsWith: 'BE',\n    definitions: maskSpecialCharDefinition,\n    lazy: false,\n  },{\n    mask: '$$&& &&&& &&&& &&$$ $$$$ $$$$ $&&',\n    startsWith: 'FR',\n    lazy: false,\n    definitions: maskSpecialCharDefinition,\n  },{\n    mask: '$$&& &&&$ $$$$ $$$$ $$$$',\n    startsWith: 'LU',\n    definitions: maskSpecialCharDefinition,\n    lazy: false,\n  },{\n    mask: '$$&& #### &&&& &&&& &&',\n    startsWith: 'NL',\n    definitions: maskSpecialCharDefinition,\n    lazy: false,\n  },{\n    mask: '$$&& &&&& &&&& &&&& &&&& &&',\n    definitions: maskSpecialCharDefinition,\n    startsWith: 'DE',\n    lazy: false,\n  }, {\n    mask: '##',\n    startsWith: '',\n    default: true,\n    definitions: maskSpecialCharDefinition,\n    lazy: false,\n  }];\n\n  maskOptions =  {\n    dispatch: getMaskForPrefixOrDefault,\n  };\n\n  get hasMaskNotDisabled() {\n    return this.args.disabled? '' : this.ibanMaskByCountry;\n  }\n\n  @action\n  onChange(value: string | number | Date | null, e: Event){  \n    const valueAsString = (value as string).toUpperCase()\n    if(this.args.onChange){\n      return this.args.onChange(valueAsString, e);\n    }\n    return this.args.changeset.set(this.args.validationField, valueAsString);\n  }\n\n\n  <template>\n    <TpkValidationInputComponent\n      @label={{@label}}\n      @type=\"text\"\n      @onChange={{this.onChange}}\n      @validationField={{@validationField}}\n      @changeEvent={{@changeEvent}}\n      @changeset={{@changeset}}\n      @mandatory={{@mandatory}}\n      @disabled={{@disabled}}\n      @mask={{this.hasMaskNotDisabled}}\n      @maskOptions={{this.maskOptions}}\n      @requiredFields={{@requiredFields}}\n    as |V|>\n        <V.Label \n        class=\"tpk-iban-container\" \n        data-test-tpk-prefab-iban-container\n        data-has-error='{{V.hasError}}' \n        anchorScrollUp={{@validationField}} \n        ...attributes>\n          <MandatoryLabelComponent \n          class=\"tpk-label\" \n          @label={{@label}} \n          @mandatory={{V.mandatory}} />   \n          <V.Input \n          class=\"tpk-iban-input uppercase\"\n         \n          data-test-tpk-iban-input\n          />\n          <TpkValidationErrorsComponent\n          class=\"tpk-validation-errors\"\n          @errors={{V.errors}}\n          />\n        </V.Label>\n    </TpkValidationInputComponent>\n  </template>\n}\n"],"names":["TpkValidationIBANPrefabComponent","Component","constructor","args","_defineProperty","mask","startsWith","definitions","maskSpecialCharDefinition","lazy","default","dispatch","getMaskForPrefixOrDefault","hasMaskNotDisabled","disabled","ibanMaskByCountry","onChange","value","e","valueAsString","toUpperCase","changeset","set","validationField","setComponentTemplate","precompileTemplate","strictMode","scope","TpkValidationInputComponent","MandatoryLabelComponent","TpkValidationErrorsComponent","_TpkValidationIBANPrefabComponent","_applyDecoratedDescriptor","_class","prototype","action","Object","getOwnPropertyDescriptor"],"mappings":";;;;;;;;;;;;;AAoBqBA,IAAAA,kFAAN,MAAMA,yCAAyCC,SAAU,CAAA;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,4BAClD,CAAC;AACnBC,MAAAA,IAAM,EAAA,qBAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZC,MAAAA,WAAa,EAAAC,yBAAA;AACbC,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EAAE;AACAJ,MAAAA,IAAM,EAAA,mCAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZG,MAAAA,IAAM,EAAA,KAAA;AACNF,MAAAA,WAAa,EAAAC,yBAAAA;AACf,KAAA,EAAE;AACAH,MAAAA,IAAM,EAAA,0BAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZC,MAAAA,WAAa,EAAAC,yBAAA;AACbC,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EAAE;AACAJ,MAAAA,IAAM,EAAA,wBAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZC,MAAAA,WAAa,EAAAC,yBAAA;AACbC,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EAAE;AACAJ,MAAAA,IAAM,EAAA,6BAAA;AACNE,MAAAA,WAAa,EAAAC,yBAAA;AACbF,MAAAA,UAAY,EAAA,IAAA;AACZG,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EAAG;AACDJ,MAAAA,IAAM,EAAA,IAAA;AACNC,MAAAA,UAAY,EAAA,EAAA;AACZI,MAAAA,OAAS,EAAA,IAAA;AACTH,MAAAA,WAAa,EAAAC,yBAAA;AACbC,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,CAAE,CAAA,CAAA;AAAAL,IAAAA,eAAA,CAEa,IAAA,EAAA,aAAA,EAAA;AACbO,MAAAA,QAAU,EAAAC,yBAAAA;KACV,CAAA,CAAA;AAAA,GAAA;EAEF,IAAIC,kBAAqBA,GAAA;IACvB,OAAO,IAAI,CAACV,IAAI,CAACW,QAAQ,GAAE,EAAA,GAAK,IAAI,CAACC,iBAAiB,CAAA;AACxD,GAAA;AAGAC,EAAAA,QAASA,CAAAC,KAAoC,EAAEC,CAAQ,EAAC;AACtD,IAAA,MAAMC,aAAgB,GAACF,KAAS,CAAQG,WAAW,EAAA,CAAA;AACnD,IAAA,IAAG,IAAI,CAACjB,IAAI,CAACa,QAAQ,EAAC;MACpB,OAAO,IAAI,CAACb,IAAI,CAACa,QAAQ,CAACG,aAAe,EAAAD,CAAA,CAAA,CAAA;AAC3C,KAAA;AACA,IAAA,OAAO,IAAI,CAACf,IAAI,CAACkB,SAAS,CAACC,GAAG,CAAC,IAAI,CAACnB,IAAI,CAACoB,eAAe,EAAEJ,aAAA,CAAA,CAAA;AAC5D,GAAA;AAuCF,CAAA,EAAAK,oBAAA,CApCEC,kBAAA,CAmCA,o2BAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,2BAAA;IAAAC,uBAAA;AAAAC,IAAAA,4BAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAC,iCAAA,CAAAA,EAAAA,iCAAA,CAAAC,EAAAA,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EA7CTC,UAAAA,EAAAA,CAAAA,MAAA,GAAAC,MAAA,CAAAC,wBAAA,CAAAJ,MAAA,CAAAC,SAAA,EAAA,UAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAD,MAAA;;;;"}