{"version":3,"file":"tpk-validation-mobile.js","sources":["../../../src/components/prefabs/tpk-validation-mobile.gts"],"sourcesContent":["import { action } from '@ember/object';\nimport { tracked } from '@glimmer/tracking';\nimport {\n  type BaseValidationSignature,\n  BaseValidationComponent,\n} from '../base.ts';\nimport type { TpkValidationInputComponentSignature } from '../tpk-validation-input.gts';\nimport TpkSelectComponent from '@triptyk/ember-input/components/tpk-select';\nimport TpkInputComponent from '@triptyk/ember-input/components/tpk-input';\nimport TpkValidationErrorsComponent from './tpk-validation-errors.gts';\nimport MandatoryLabelComponent from './mandatory-label.gts';\n\nexport interface TpkValidationMobilePrefabSignature\n  extends BaseValidationSignature {\n  Args: Omit<\n    TpkValidationInputComponentSignature['Args'],\n    | 'type'\n    | 'min'\n    | 'max'\n    | 'step'\n    | 'mask'\n    | 'unmaskValue'\n    | 'maskOptions'\n    | 'mask'\n    | 'changeEvent'\n    | 'onChange'\n  >;\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLElement;\n}\n\ninterface Prefix {\n  flag: string;\n  code: string;\n}\n\nconst masks = {\n  '+31': '00 0000 0000', // Netherlands\n  '+32': '000 00 00 00', // Belgium\n  '+33': '0 00 00 00 00', // France\n  '+49': '0000 0000000', // Germany\n  '+352': '000 000 000', // Luxembourg\n};\n\nexport default class TpkValidationMobilePrefabComponent extends BaseValidationComponent<TpkValidationMobilePrefabSignature> {\n  defaultPrefix = { flag: '/BE.svg', code: '+32' };\n  @tracked selectedPrefix = this.defaultPrefix;\n  @tracked prefixes: Prefix[] = [\n    { flag: '/NL.svg', code: '+31' },\n    { flag: '/BE.svg', code: '+32' },\n    { flag: '/FR.svg', code: '+33' },\n    { flag: '/DE.svg', code: '+49' },\n    { flag: '/LU.svg', code: '+352' },\n  ];\n\n  constructor(\n    owner: unknown,\n    args: TpkValidationMobilePrefabSignature['Args'],\n  ) {\n    super(owner, args);\n    this.selectedPrefix = this.getPrefix();\n  }\n\n  get valueForMobileNumber() {\n    return this.getValue();\n  }\n\n  get mask() {\n    return (\n      masks[this.selectedPrefix.code as keyof typeof masks] || '000 00 00 00'\n    );\n  }\n\n  getPrefix(): Prefix {\n    const value = this.value;\n    if (typeof value === 'string') {\n      const matchedPrefix =\n        this.prefixes.find((prefix) => value.startsWith(prefix.code)) ||\n        this.defaultPrefix;\n      return matchedPrefix;\n    }\n    return this.defaultPrefix;\n  }\n\n  getValue(): string {\n    const fullValue = this.value as string;\n    if (typeof fullValue === 'string') {\n      const matchedPrefix = this.prefixes.find((prefix) =>\n        fullValue.startsWith(prefix.code),\n      );\n      if (matchedPrefix) {\n        return fullValue.slice(matchedPrefix.code.length).trim();\n      }\n    }\n    return fullValue || '';\n  }\n\n  @action\n  onChangeValueMobile(value: unknown) {\n    if (!value) {\n      this.args.changeset.set(this.args.validationField, value);\n    } else {\n      this.args.changeset.set(\n        this.args.validationField,\n        `${this.selectedPrefix.code}${value}`,\n      );\n    }\n  }\n\n  @action\n  onChangeValuePrefix(value: unknown) {\n    if (!value) return;\n    const code = (value as Prefix).code;\n    this.selectedPrefix =\n      this.prefixes.find((prefix) => prefix.code === code) ||\n      this.defaultPrefix;\n  }\n\n  getValueFromOption = (option: unknown, key: keyof Prefix) =>\n    (option as Prefix)[key] as string;\n\n  <template>\n    <TpkInputComponent\n      @value={{this.valueForMobileNumber}}\n      @label={{@label}}\n      @onChange={{this.onChangeValueMobile}}\n      @disabled={{@disabled}}\n      @mask={{this.mask}}\n      @unmaskValue={{true}}\n      as |I|\n    >\n      <div\n        class='tpk-mobile-container'\n        data-has-error='{{this.hasError}}'\n        data-test-tpk-prefab-mobile-container\n        anchorScrollUp={{@validationField}}\n        ...attributes\n      >\n        <I.Label\n          data-test-tpk-input\n          data-has-error='{{this.hasError}}'\n          class='tpk-mobile-label-container'\n        >\n          <MandatoryLabelComponent\n            @label={{@label}}\n            @mandatory={{this.mandatory}}\n            class='tpk-label'\n          />\n        </I.Label>\n        <div class='tpk-mobile-content'>\n          <TpkSelectComponent\n            @label=''\n            @options={{this.prefixes}}\n            @selected={{this.selectedPrefix}}\n            @disabled={{@disabled}}\n            @onChange={{this.onChangeValuePrefix}}\n            as |T|\n          >\n            <T.Option as |O|>\n              <div class='flag'>\n                <img\n                  alt={{this.getValueFromOption O.option 'code'}}\n                  src={{this.getValueFromOption O.option 'flag'}}\n                  width='20'\n                />\n                <div>\n                  {{this.getValueFromOption O.option 'code'}}\n                </div>\n              </div>\n            </T.Option>\n          </TpkSelectComponent>\n          <I.Input\n            data-test-tpk-mobile-input\n            inputmode='tel'\n            class='tpk-mobile-input'\n          />\n        </div>\n        <TpkValidationErrorsComponent\n          class='tpk-validation-errors'\n          @errors={{this.errors}}\n        />\n      </div>\n    </TpkInputComponent>\n  </template>\n}\n"],"names":["masks","TpkValidationMobilePrefabComponent","BaseValidationComponent","constructor","owner","args","_defineProperty","flag","code","_initializerDefineProperty","_descriptor","_descriptor2","option","key","selectedPrefix","getPrefix","valueForMobileNumber","getValue","mask","value","matchedPrefix","prefixes","find","prefix","startsWith","defaultPrefix","fullValue","slice","length","trim","onChangeValueMobile","changeset","set","validationField","onChangeValuePrefix","setComponentTemplate","precompileTemplate","strictMode","scope","TpkInputComponent","MandatoryLabelComponent","TpkSelectComponent","TpkValidationErrorsComponent","_TpkValidationMobilePrefabComponent","_applyDecoratedDescriptor","_class","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor"],"mappings":"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"}