{"version":3,"file":"tpk-table-generic-prefab.js","sources":["../../../src/components/prefabs/tpk-table-generic-prefab.gts"],"sourcesContent":["import Component from '@glimmer/component';\nimport TableGenericComponent from \"../tpk-table-generic.gts\";\nimport TpkTableGeneric from \"../tpk-table-generic.gts\";\nimport type { ContentValue, WithBoundArgs } from '@glint/template';\nimport { get } from '@ember/object';\nimport type {  Invokable } from '@glint/template/-private/integration';\nimport { fn } from '@ember/helper';\n\n\nexport interface TableParams {\n  entity: string;\n  pageSizes?: number[];\n  defaultSortColumn?: string;\n  additionalFilters?: Record<string, unknown>;\n  relationships?: string;\n  rowClick?: (element?:unknown, e?:Event) => void;\n  columns: {\n    field: string;\n    headerName: string;\n    sortable: boolean;\n    renderElement?: (element: unknown) => void;\n    component?: string;\n  }[];\n  actionMenu?: { icon: string; action: (...args: unknown[]) => void; name: string }[];\n}\n\nexport interface TableGenericPrefabComponentSignature {\n  Args: {\n     tableParams:TableParams,\n     // eslint-disable-next-line @typescript-eslint/no-explicit-any\n     columnsComponent?: Record<string, Invokable<any>>;\n  };\n  Blocks: {\n    default: [\n      WithBoundArgs<typeof TableGenericComponent, 'rowClick' | 'filterText' | 'relationships' | 'registerApi' | 'entity' | 'pageSizes' | 'additionalFilters' | 'defaultSortColumn'>\n    ];\n  };\n  Element: HTMLElement;\n}\n\nexport default class TableGenericPrefabComponent extends Component<TableGenericPrefabComponentSignature>{\n  getComponent = (component: string) => {\n    if (!this.args.columnsComponent || !this.args.columnsComponent[component]) {\n      throw new Error(`Component ${component} not found`);\n    }\n    return this.args.columnsComponent[component];\n  }\n  \n  get pageSizes(){\n    if(this.args.tableParams.pageSizes){\n      return this.args.tableParams.pageSizes;\n    }\n    return [5, 10, 25];\n  }\n\n  get entity(){\n    if(!this.args.tableParams.entity){\n      throw new Error(\"entity is required\");\n    }\n    return this.args.tableParams.entity;\n  }\n\n  get columns() {\n    if(!this.args.tableParams.columns){\n      throw new Error(\"entityKeys is required\");\n    }\n    return this.args.tableParams.columns\n  }\n\n  get hasActionMenu(){\n    if(!this.args.tableParams.actionMenu){\n      return false;\n    }\n    return this.args.tableParams.actionMenu.length ? true : false;\n  }\n\n  displayValue = (element: unknown, field: string): ContentValue => {\n    const value = get(element, field);\n    const column = this.columns.find(column => column.field === field);\n    if(column?.renderElement){\n      return column.renderElement(value);\n    }\n    return String(value);\n  }\n\n  displayRawValue = (element: unknown, field: string) => {\n    return get(element, field);\n  }\n\n  get actions(){\n    return this.args.tableParams.actionMenu;\n  }\n\n\n  <template>\n    <div class=\"tpk-table-generic-container\"\n     data-test-table-generic-prefab>\n      <TpkTableGeneric\n        @pageSizes={{this.pageSizes}}\n        @additionalFilters={{@tableParams.additionalFilters}}\n        @defaultSortColumn={{@tableParams.defaultSortColumn}}\n        @entity={{this.entity}}\n        @rowClick={{@tableParams.rowClick}}\n        @relationships={{@tableParams.relationships}}\n      as | TG |>\n        <TG.SearchBar />\n        <TG.Table as | Table |>\n          <Table.Header as |Header|>\n            {{#each this.columns as |column|}}\n              <Header.Cell @sortable={{column.sortable}} @prop={{column.field}}>\n                {{column.headerName}}\n              </Header.Cell>\n            {{/each}}\n          </Table.Header>\n          <Table.Body as |Body element|>\n            {{#each this.columns as |column|}}\n              <Body.Cell >\n                {{#if column.component}}\n                  {{#let (this.getComponent column.component) as |ComponentName|}}\n                    <ComponentName\n                      @row={{element}}\n                      @field={{column.field}}\n                      @cellValue={{this.displayRawValue element column.field}}\n                      @cellValueFormated={{this.displayValue element column.field}}\n                    />\n                  {{/let}}\n                {{else}}\n                    {{this.displayValue element column.field}}\n                {{/if}}\n              </Body.Cell>\n            {{/each}}\n            {{#if this.hasActionMenu}}\n              <Body.ActionMenu  as |Action|>\n                {{#each this.actions as |actionElement|}}\n                {{log actionElement.action}}\n                  <Action @icon={{actionElement.icon}} @action={{fn actionElement.action element}} >\n                    {{actionElement.name}}\n                  </Action>\n                {{/each}}\n              </Body.ActionMenu>\n            {{/if}}\n          </Table.Body>\n          <Table.Footer />\n        </TG.Table>\n    </TpkTableGeneric>\n  </div>\n</template>\n}\n"],"names":["TableGenericPrefabComponent","Component","constructor","args","_defineProperty","component","columnsComponent","Error","element","field","value","get","column","columns","find","renderElement","String","pageSizes","tableParams","entity","hasActionMenu","actionMenu","length","actions","_TableGenericPrefabComponent","setComponentTemplate","precompileTemplate","strictMode","scope","TpkTableGeneric","fn"],"mappings":"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"}