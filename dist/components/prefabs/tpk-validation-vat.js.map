{"version":3,"file":"tpk-validation-vat.js","sources":["../../../src/components/prefabs/tpk-validation-vat.gts"],"sourcesContent":["import TpkValidationInputComponent, {\n  type TpkValidationInputComponentSignature,\n} from '../tpk-validation-input.gts';\nimport { type BaseValidationSignature } from '../base.ts';\nimport {\n  maskSpecialCharDefinition,\n  getMaskForPrefixOrDefault,\n} from '../../utils/mask-utils.ts';\nimport TpkValidationErrorsComponent from './tpk-validation-errors.gts';\nimport MandatoryLabelComponent from './mandatory-label.gts';\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\n\nexport interface TpkValidationVATPrefabSignature\n  extends BaseValidationSignature {\n  Args: Omit<\n    TpkValidationInputComponentSignature['Args'],\n    | 'type'\n    | 'min'\n    | 'max'\n    | 'step'\n    | 'mask'\n    | 'maskOptions'\n    | 'unmaskValue'\n    | 'mask'\n  > & {\n    mandatory?: boolean;\n    onChange?: (value: string, e: Event) => void; \n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLElement;\n}\n\nexport default class TpkValidationVATPrefabComponent extends Component<TpkValidationVATPrefabSignature> {\n  ibanMaskByCountry = [\n    {\n      mask: '$$&&&&&&&&&&',\n      startsWith: 'BE',\n      definitions: maskSpecialCharDefinition,\n      lazy: false,\n    },\n    {\n      mask: '$$$$&&&&&&&&&',\n      startsWith: 'FR',\n      lazy: false,\n      definitions: maskSpecialCharDefinition,\n    },\n    {\n      mask: '$$&&&&&&&&',\n      startsWith: 'LU',\n      definitions: maskSpecialCharDefinition,\n      lazy: false,\n    },\n    {\n      mask: '$$&&&&&&&&&B&&',\n      startsWith: 'NL',\n      definitions: maskSpecialCharDefinition,\n      lazy: false,\n    },\n    {\n      mask: '$$&&&&&&&&&',\n      definitions: maskSpecialCharDefinition,\n      startsWith: 'DE',\n      lazy: false,\n    },\n    {\n      mask: '##',\n      startsWith: '',\n      default: true,\n      definitions: maskSpecialCharDefinition,\n    },\n  ];\n\n  maskOptions = {\n    dispatch: getMaskForPrefixOrDefault,\n  };\n\n  @action\n  onChange(value: string | number | Date | null, e: Event){  \n    const valueAsString = (value as string).toUpperCase()\n    if(this.args.onChange){\n      return this.args.onChange(valueAsString, e);\n    }\n    return this.args.changeset.set(this.args.validationField, valueAsString);\n  }\n\n  <template>\n    <TpkValidationInputComponent\n      @label={{@label}}\n      @type='text'\n      @onChange={{this.onChange}}\n      @validationField={{@validationField}}\n      @changeEvent={{@changeEvent}}\n      @disabled={{@disabled}}\n      @changeset={{@changeset}}\n      @mandatory={{@mandatory}}\n      @mask={{this.ibanMaskByCountry}}\n      @maskOptions={{this.maskOptions}}\n      @requiredFields={{@requiredFields}}\n      as |V|\n    >\n      <V.Label\n        class='tpk-vat-container'\n        data-test-tpk-prefab-vat-container\n        data-has-error='{{V.hasError}}'\n        anchorScrollUp={{@validationField}}\n        ...attributes\n      >\n        <MandatoryLabelComponent\n          class='tpk-label'\n          @label={{@label}}\n          @mandatory={{V.mandatory}}\n        />\n        <V.Input class='tpk-vat-input uppercase' data-test-tpk-vat-input />\n        <TpkValidationErrorsComponent\n          class='tpk-validation-errors'\n          @errors={{V.errors}}\n        />\n      </V.Label>\n    </TpkValidationInputComponent>\n  </template>\n}\n"],"names":["TpkValidationVATPrefabComponent","Component","constructor","args","_defineProperty","mask","startsWith","definitions","maskSpecialCharDefinition","lazy","default","dispatch","getMaskForPrefixOrDefault","onChange","value","e","valueAsString","toUpperCase","changeset","set","validationField","setComponentTemplate","precompileTemplate","strictMode","scope","TpkValidationInputComponent","MandatoryLabelComponent","TpkValidationErrorsComponent","_TpkValidationVATPrefabComponent","_applyDecoratedDescriptor","_class","prototype","action","Object","getOwnPropertyDescriptor"],"mappings":";;;;;;;;;;;;;AAmCqBA,IAAAA,gFAAN,MAAMA,wCAAwCC,SAAU,CAAA;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,4BACjD,CAClB;AACEC,MAAAA,IAAM,EAAA,cAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZC,MAAAA,WAAa,EAAAC,yBAAA;AACbC,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EACA;AACEJ,MAAAA,IAAM,EAAA,eAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZG,MAAAA,IAAM,EAAA,KAAA;AACNF,MAAAA,WAAa,EAAAC,yBAAAA;AACf,KAAA,EACA;AACEH,MAAAA,IAAM,EAAA,YAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZC,MAAAA,WAAa,EAAAC,yBAAA;AACbC,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EACA;AACEJ,MAAAA,IAAM,EAAA,gBAAA;AACNC,MAAAA,UAAY,EAAA,IAAA;AACZC,MAAAA,WAAa,EAAAC,yBAAA;AACbC,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EACA;AACEJ,MAAAA,IAAM,EAAA,aAAA;AACNE,MAAAA,WAAa,EAAAC,yBAAA;AACbF,MAAAA,UAAY,EAAA,IAAA;AACZG,MAAAA,IAAM,EAAA,KAAA;AACR,KAAA,EACA;AACEJ,MAAAA,IAAM,EAAA,IAAA;AACNC,MAAAA,UAAY,EAAA,EAAA;AACZI,MAAAA,OAAS,EAAA,IAAA;AACTH,MAAAA,WAAa,EAAAC,yBAAAA;AACf,KAAA,CACD,CAAA,CAAA;AAAAJ,IAAAA,eAAA,CAEa,IAAA,EAAA,aAAA,EAAA;AACZO,MAAAA,QAAU,EAAAC,yBAAAA;KACV,CAAA,CAAA;AAAA,GAAA;AAGFC,EAAAA,QAASA,CAAAC,KAAoC,EAAEC,CAAQ,EAAC;AACtD,IAAA,MAAMC,aAAgB,GAACF,KAAS,CAAQG,WAAW,EAAA,CAAA;AACnD,IAAA,IAAG,IAAI,CAACd,IAAI,CAACU,QAAQ,EAAC;MACpB,OAAO,IAAI,CAACV,IAAI,CAACU,QAAQ,CAACG,aAAe,EAAAD,CAAA,CAAA,CAAA;AAC3C,KAAA;AACA,IAAA,OAAO,IAAI,CAACZ,IAAI,CAACe,SAAS,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI,CAACiB,eAAe,EAAEJ,aAAA,CAAA,CAAA;AAC5D,GAAA;AAqCF,CAAA,EAAAK,oBAAA,CAnCEC,kBAAA,CAkCA,k1BAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,2BAAA;IAAAC,uBAAA;AAAAC,IAAAA,4BAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAC,gCAAA,CAAAA,EAAAA,gCAAA,CAAAC,EAAAA,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EA3CTC,UAAAA,EAAAA,CAAAA,MAAA,GAAAC,MAAA,CAAAC,wBAAA,CAAAJ,MAAA,CAAAC,SAAA,EAAA,UAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAD,MAAA;;;;"}