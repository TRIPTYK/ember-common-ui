{"version":3,"file":"tpk-checkbox.js","sources":["../../src/components/tpk-checkbox.gts"],"sourcesContent":["import { assert } from '@ember/debug';\nimport { action } from '@ember/object';\nimport { BaseUIComponent, type BaseUIComponentArgs } from './base.ts';\nimport type { MergeDeep } from 'type-fest';\nimport TpkCheckboxInputComponent from './tpk-checkbox-input.gts';\nimport type { WithBoundArgs } from '@glint/template';\nimport { hash } from '@ember/helper';\nimport TpkLabel from './tpk-label.gts';\n\nexport type TpkCheckboxSignature = {\n  Args: MergeDeep<\n    BaseUIComponentArgs['Args'],\n    {\n      checked?: boolean;\n      disabled?: boolean;\n      onChange?: (isChecked: boolean, value: string, e: Event) => unknown;\n    }\n  >;\n  Blocks: {\n    default: [\n      {\n        Label: WithBoundArgs<\n          typeof TpkLabel,\n          'guid' | 'label'\n        >;\n        Input: WithBoundArgs<\n          typeof TpkCheckboxInputComponent,\n          'changeEvent' | 'onChange' | 'guid' | 'checked'\n        >;\n        onChange: TpkCheckboxComponent['onChange'];\n        changeEvent: 'input' | 'change';\n        guid: string;\n      },\n    ];\n  };\n};\n\nexport default class TpkCheckboxComponent extends BaseUIComponent<TpkCheckboxSignature> {\n  constructor(owner: unknown, args: TpkCheckboxSignature['Args']) {\n    super(owner, args);\n    assert('@checked is required', typeof args.checked === 'boolean');\n    assert('@label is required', args.label !== undefined);\n  }\n\n  @action\n  public onChange(e: Event) {\n    e.preventDefault();\n    const target = e.target as HTMLInputElement;\n    this.args.onChange?.(target.checked, target.value, e);\n  }\n\n  <template>\n    {{yield\n      (hash\n        Label=(component\n          TpkLabel\n          guid=this.guid\n          checked=@checked\n          label=@label\n        )\n        Input=(component\n          TpkCheckboxInputComponent\n          guid=this.guid\n          checked=@checked\n          disabled=@disabled\n          changeEvent=this.changeEvent\n          onChange=this.onChange\n        )\n        onChange=this.onChange\n        changeEvent=this.changeEvent\n        guid=this.guid\n      )\n    }}\n  </template>\n}\n"],"names":["TpkCheckboxComponent","BaseUIComponent","constructor","owner","args","assert","checked","label","undefined","onChange","e","preventDefault","target","value","setComponentTemplate","precompileTemplate","strictMode","scope","hash","TpkLabel","TpkCheckboxInputComponent","_TpkCheckboxComponent","_applyDecoratedDescriptor","_class","prototype","action","Object","getOwnPropertyDescriptor"],"mappings":";;;;;;;;;;;AAqCqBA,IAAAA,0DAAN,MAAMA,6BAA6BC,eAAgB,CAAA;AAChEC,EAAAA,WAAAA,CAAYC,KAAc,EAAEC,IAAkC,EAAE;AAC9D,IAAA,KAAK,CAACD,KAAO,EAAAC,IAAA,CAAA,CAAA;IACbC,MAAA,CAAO,sBAAwB,EAAA,OAAOD,IAAK,CAAAE,OAAO,KAAK,SAAA,CAAA,CAAA;IACvDD,MAAO,CAAA,oBAAA,EAAsBD,IAAK,CAAAG,KAAK,KAAKC,SAAA,CAAA,CAAA;AAC9C,GAAA;EAGOC,QAAAA,CAASC,CAAQ,EAAE;IACxBA,CAAA,CAAEC,cAAc,EAAA,CAAA;AAChB,IAAA,MAAMC,MAAA,GAASF,CAAE,CAAAE,MAAU,CAAA;AAC3B,IAAA,IAAI,CAACR,IAAI,CAACK,QAAQ,GAAGG,OAAON,OAAO,EAAEM,MAAO,CAAAC,KAAK,EAAEH,CAAA,CAAA,CAAA;AACrD,GAAA;AAyBF,CAAA,EAAAI,oBAAA,CAvBEC,kBAAA,CAsBA,0TAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,IAAA;IAAAC,QAAA;AAAAC,IAAAA,yBAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAC,qBAAA,CAAAA,EAAAA,qBAAA,CAAAC,EAAAA,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EA7BTC,UAAAA,EAAAA,CAAAA,MAAA,GAAAC,MAAA,CAAAC,wBAAA,CAAAJ,MAAA,CAAAC,SAAA,EAAA,UAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAD,MAAA;;;;"}