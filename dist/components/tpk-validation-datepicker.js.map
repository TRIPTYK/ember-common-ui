{"version":3,"file":"tpk-validation-datepicker.js","sources":["../../src/components/tpk-validation-datepicker.gts"],"sourcesContent":["import { action } from '@ember/object';\nimport {\n  type BaseValidationSignature,\n  BaseValidationComponent,\n} from './base.ts';\nimport { assert } from '@ember/debug';\nimport { type TpkDatepickerInputArgs } from '@triptyk/ember-input/components/tpk-datepicker-input';\nimport { hash } from '@ember/helper';\nimport TpkDatepicker, {\n  type TpkDatepickerSignature,\n} from '@triptyk/ember-input/components/tpk-datepicker';\n\nexport interface TpkValidationDatepickerComponentSignature\n  extends BaseValidationSignature {\n  Args: Omit<\n    BaseValidationSignature['Args'] & {\n      label: string;\n      disabled?: boolean;\n      mask?: string;\n      onChange?: (value: Date[]) => void;\n    } & TpkDatepickerInputArgs,\n    'value'\n  >;\n  Blocks: {\n    default: [\n      {\n        Input: TpkDatepickerSignature['Blocks']['default'][0]['Input'];\n        Label: TpkDatepickerSignature['Blocks']['default'][0]['Label'];\n        errors: TpkValidationDatepickerComponent['errors'];\n        hasError: TpkValidationDatepickerComponent['hasError'];\n        firstError: TpkValidationDatepickerComponent['firstError'];\n        mandatory: TpkValidationDatepickerComponent['mandatory'];\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class TpkValidationDatepickerComponent extends BaseValidationComponent<TpkValidationDatepickerComponentSignature> {\n  @action onChange(dates: Date[]) {\n    if (dates.length === 0)\n      return this.args.changeset.set(\n        this.args.validationField,\n        this.args.mode === 'multiple' || this.args.mode === 'range' ? [] : null,\n      );\n\n    const date =\n      this.args.mode === 'multiple' || this.args.mode === 'range'\n        ? dates\n        : dates[0];\n    if (this.args.onChange) {\n      return this.args.onChange(dates);\n    }\n    return this.args.changeset.set(this.args.validationField, date);\n  }\n\n  get value() {\n    assert(\n      `@value must be a string, date or null for @${this.args.validationField}`,\n      typeof super.value === 'string' ||\n        super.value instanceof Date ||\n        super.value === null,\n    );\n    return super.value;\n  }\n\n  <template>\n    <TpkDatepicker\n      @value={{this.value}}\n      @label={{@label}}\n      @onChange={{this.onChange}}\n      @onClose={{@onClose}}\n      @disabled={{@disabled}}\n      @placeholder={{@placeholder}}\n      @mask={{@mask}}\n      @useCurrent={{@useCurrent}}\n      @mode={{@mode}}\n      @multipleDatesSeparator={{@multipleDatesSeparator}}\n      @stepping={{@stepping}}\n      @promptTimeOnDateChange={{@promptTimeOnDateChange}}\n      @todayButton={{@todayButton}}\n      @clearButton={{@clearButton}}\n      @closeButton={{@closeButton}}\n      @enableTime={{@enableTime}}\n      @noCalendar={{@noCalendar}}\n      @enableSecond={{@enableSecond}}\n      @keepOpen={{@keepOpen}}\n      @locale={{@locale}}\n      @dateFormat={{@dateFormat}}\n      @minDate={{@minDate}}\n      @maxDate={{@maxDate}}\n      @daysOfWeekDisabled={{@daysOfWeekDisabled}}\n      @disabledTimeIntervals={{@disabledTimeIntervals}}\n      @disabledDates={{@disabledDates}}\n      @enabledDates={{@enabledDates}}\n      @disabledHours={{@disabledHours}}\n      @enabledHours={{@enabledHours}}\n      @viewMode={{@viewMode}}\n      ...attributes\n      data-has-error='{{this.hasError}}'\n      as |D|\n    >\n      {{yield\n        (hash\n          Input=D.Input\n          Label=D.Label\n          errors=this.errors\n          hasError=this.hasError\n          firstError=this.firstError\n          mandatory=this.mandatory\n        )\n      }}\n    </TpkDatepicker>\n  </template>\n}\n"],"names":["TpkValidationDatepickerComponent","BaseValidationComponent","onChange","dates","length","args","changeset","set","validationField","mode","date","value","assert","Date","setComponentTemplate","precompileTemplate","strictMode","scope","TpkDatepicker","hash","_TpkValidationDatepickerComponent","_applyDecoratedDescriptor","_class","prototype","action","Object","getOwnPropertyDescriptor"],"mappings":";;;;;;;;;;;AAsCqBA,IAAAA,kFAAN,MAAMA,yCAAyCC,uBAAwB,CAAA;EAC5EC,QAASA,CAAAC,KAAa,EAAE;AAC9B,IAAA,IAAIA,KAAM,CAAAC,MAAM,KAAK,CAAA,EACnB,OAAO,IAAI,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAC5B,IAAI,CAACF,IAAI,CAACG,eAAe,EACzB,IAAI,CAACH,IAAI,CAACI,IAAI,KAAK,UAAA,IAAc,IAAI,CAACJ,IAAI,CAACI,IAAI,KAAK,OAAA,GAAU,EAAE,GAAG,IAAA,CAAA,CAAA;IAGvE,MAAMC,OACJ,IAAI,CAACL,IAAI,CAACI,IAAI,KAAK,UAAc,IAAA,IAAI,CAACJ,IAAI,CAACI,IAAI,KAAK,UAChDN,KACA,GAAAA,KAAK,CAAC,CAAE,CAAA,CAAA;AACd,IAAA,IAAI,IAAI,CAACE,IAAI,CAACH,QAAQ,EAAE;AACtB,MAAA,OAAO,IAAI,CAACG,IAAI,CAACH,QAAQ,CAACC,KAAA,CAAA,CAAA;AAC5B,KAAA;AACA,IAAA,OAAO,IAAI,CAACE,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,IAAI,CAACF,IAAI,CAACG,eAAe,EAAEE,IAAA,CAAA,CAAA;AAC5D,GAAA;EAEA,IAAIC,KAAQA,GAAA;IACVC,MACE,CAAA,CAA8C,2CAAA,EAAA,IAAI,CAACP,IAAI,CAACG,eAAe,CAAE,CAAA,EACzE,OAAO,KAAK,CAACG,UAAU,QACrB,IAAA,KAAK,CAACA,KAAiB,YAAAE,IAAA,IACvB,KAAK,CAACF,KAAU,KAAA,IAAA,CAAA,CAAA;IAEpB,OAAO,KAAK,CAACA,KAAA,CAAA;AACf,GAAA;AAkDF,CAAA,EAAAG,oBAAA,CAhDEC,kBAAA,CA+CA,ymCAAA,EAAA;EAAAC,UAAA,EAAA,IAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;IAAAC,aAAA;AAAAC,IAAAA,IAAAA;AAAA,GAAA,CAAA;AAAU,CAAA,CAAA,EAAAC,iCAAA,CAAAA,EAAAA,iCAAA,CAAAC,EAAAA,yBAAA,CAAAC,MAAA,CAAAC,SAAA,EA1ETC,UAAAA,EAAAA,CAAAA,MAAA,GAAAC,MAAA,CAAAC,wBAAA,CAAAJ,MAAA,CAAAC,SAAA,EAAA,UAAA,CAAA,EAAAD,MAAA,CAAAC,SAAA,CAAA,EAAAD,MAAA;;;;"}