{"version":3,"file":"get-required-fields.js","sources":["../../src/utils/get-required-fields.ts"],"sourcesContent":["import { ValidationError, type Schema } from \"yup\";\nimport { clearObjectValues } from \"./clear-object.ts\";\nimport { jsonPathToDottedPath } from \"./validate-and-map.ts\";\n\nexport function getRequiredFields(validationSchema: Schema, data: Record<string, unknown>): string[] | undefined {\n  const clearedObject = clearObjectValues(data);\n\n  try {\n    validationSchema.validateSync(clearedObject, { abortEarly: false });\n  } catch(e) {\n    if (e instanceof ValidationError) {\n      const errorFields = e.inner.map((err) => ({\n        type: err.type,\n        path: err.path,\n        message: err.message,\n        value: err.value,\n      }));\n      return errorFields\n        .filter((e) => e.type === 'required')\n        .map((error) => jsonPathToDottedPath(error.path ?? ''))\n        .filter(r => r !== undefined);\n    }\n  }\n}\n"],"names":["getRequiredFields","validationSchema","data","clearedObject","clearObjectValues","validateSync","abortEarly","e","ValidationError","errorFields","inner","map","err","type","path","message","value","filter","error","jsonPathToDottedPath","r","undefined"],"mappings":";;;;AAIO,SAASA,iBAAiBA,CAACC,gBAAwB,EAAEC,IAA6B,EAAwB;AAC/G,EAAA,MAAMC,aAAa,GAAGC,iBAAiB,CAACF,IAAI,CAAC,CAAA;EAE7C,IAAI;AACFD,IAAAA,gBAAgB,CAACI,YAAY,CAACF,aAAa,EAAE;AAAEG,MAAAA,UAAU,EAAE,KAAA;AAAM,KAAC,CAAC,CAAA;GACpE,CAAC,OAAMC,CAAC,EAAE;IACT,IAAIA,CAAC,YAAYC,eAAe,EAAE;MAChC,MAAMC,WAAW,GAAGF,CAAC,CAACG,KAAK,CAACC,GAAG,CAAEC,GAAG,KAAM;QACxCC,IAAI,EAAED,GAAG,CAACC,IAAI;QACdC,IAAI,EAAEF,GAAG,CAACE,IAAI;QACdC,OAAO,EAAEH,GAAG,CAACG,OAAO;QACpBC,KAAK,EAAEJ,GAAG,CAACI,KAAAA;AACb,OAAC,CAAC,CAAC,CAAA;AACH,MAAA,OAAOP,WAAW,CACfQ,MAAM,CAAEV,CAAC,IAAKA,CAAC,CAACM,IAAI,KAAK,UAAU,CAAC,CACpCF,GAAG,CAAEO,KAAK,IAAKC,oBAAoB,CAACD,KAAK,CAACJ,IAAI,IAAI,EAAE,CAAC,CAAC,CACtDG,MAAM,CAACG,CAAC,IAAIA,CAAC,KAAKC,SAAS,CAAC,CAAA;AACjC,KAAA;AACF,GAAA;AACF;;;;"}